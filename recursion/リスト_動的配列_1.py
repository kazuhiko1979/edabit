"""
動的配列(1)
今まで見てきた固定配列はサイズが固定されていました。
つまり、配列を宣言する前に配列のサイズを知る必要があり、宣言後にサイズを拡大したり縮小したりすることはできません。
解決策は、より大きなサイズの新しい配列を作るしかありません。

動的配列は、非プリミティブ型であるオブジェクトとして実装されています。
動的配列は配列データにアクセスしてくれるメソッドや演算子を提供してくれるコンテナと考えてみてください。
では、整数のリストに対して、動的配列を使った簡単な例を見てみましょう。
"""

# 動的配列を取得し、その内容を出力します。
def printArray(arr):
    for value in arr:
        # end = " "を使用すると、改行ではなく行に出力することができます。
        print(value, end="")
    print()

# pythonのリスト型は動的配列です。動的配列はオブジェクトです。
# すべてが自動的に処理されるので、動的配列のサイズを宣言する必要はありません。
dArr = [2, 3, 4, 1, -10, 200]

printArray(dArr)

# 動的配列にいくつかの値を追加します。
# appendメソッドは、配列の最後にデータを追加して動的配列の状態を変更するためえに使用されます。
# 新しい配列を作る必要も、配列のサイズを気にする必要はありません。
# 動的配列がすべてを自動的に管理します。
dArr.append(10)
dArr.append(340)
dArr.append(543)
dArr.append(-23)

# dArrの新しい状態を出力します。
printArray(dArr)
