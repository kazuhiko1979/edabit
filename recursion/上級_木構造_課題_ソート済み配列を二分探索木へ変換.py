"""
ソート済み配列を二分探索木へ変換
easy
異なる整数値で構成されるソート済みのリスト numberList が与えられるので、平衡二分探索木を作成し、
その根ノードを返す、sortedArrToBST という関数を作成してください。


関数の入出力例

入力のデータ型： integer[] numberList

出力のデータ型： binaryTree<integer>

sortedArrToBST( [1,2,3] )--> [2,1,3]

sortedArrToBST( [1,2,3,5,6,9,10] )--> [5,2,9,1,3,6,10]

sortedArrToBST( [-1,0,3,10,13,19,22] )--> [10,0,19,-1,3,13,22]

sortedArrToBST( [1,3,4,5,8] )--> [4,1,5,null,3,null,8]

sortedArrToBST( [1,4,6,10,11,14,15,20,22,25,50,61,68,72] )--> [15,6,50,1,11,22,68,null,4,10,14,20,25,61,72]

ヒントを閉じる

中級コース / リスト / 分割統治法 、上級コース / 木構造 / 二分探索木(2) を復習しましょう。

"""